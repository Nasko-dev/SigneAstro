import { useState } from "react";
import "./Belier.css";
import QuestionProps from "../../questionProps/QuestionProps";
import Line from "../../line/Line";
import ButtonChoix from "../../buttonChoix/buttonChoix";

interface BelierProps {
  onReturn: () => void;
}

export default function Belier({ onReturn }: BelierProps) {
  const [questionIndex, setQuestionIndex] = useState(0);

  // Liste des questions et choix de r√©ponse
  const questions = [
    {
      question: "Pr√©f√©rez-vous l'action ou la r√©flexion ?",
      choices: ["Action", "R√©flexion"],
    },
    {
      question: "√ätes-vous plut√¥t leader ou suiveur ?",
      choices: ["Leader", "Suiveur"],
    },
    {
      question: "Vous aimez relever les d√©fis. Vrai ou Faux ?",
      choices: ["Vrai", "Faux"],
    },
    {
      question: "Quand vous avez une id√©e, vous foncez sans h√©siter ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "La patience est une vertu que vous ma√Ætrisez bien ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "√ätes-vous plus motiv√© par la comp√©tition ou la coop√©ration ?",
      choices: ["Comp√©tition", "Coop√©ration"],
    },
    {
      question: "Quand quelqu‚Äôun vous provoque, vous r√©pondez imm√©diatement ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Pr√©f√©rez-vous les sports extr√™mes ou les jeux de soci√©t√© ?",
      choices: ["Sports extr√™mes", "Jeux de soci√©t√©"],
    },
    {
      question: "L'aventure et l'inconnu vous attirent-ils ?",
      choices: ["Oui", "Non"],
    },
    {
      question:
        "√ätes-vous du genre √† abandonner facilement un projet difficile ?",
      choices: ["Oui", "Non"],
    },
  ];

  // Gestion du passage √† la question suivante en r√©cup√©rant le choix cliqu√©
  const handleNextQuestion = (selectedChoice: string) => {
    console.log("Choix s√©lectionn√© :", selectedChoice);
    if (questionIndex < questions.length - 1) {
      setQuestionIndex(questionIndex + 1);
    } else {
      alert("Fin du quiz ! üéâ");
    }
  };

  // Gestion du retour √† la question pr√©c√©dente
  const handlePreviousQuestion = () => {
    if (questionIndex > 0) {
      setQuestionIndex(questionIndex - 1);
    } else {
      alert("Vous √™tes d√©j√† √† la premi√®re question.");
    }
  };

  return (
    <div className="belier-container">
      <h1 className="title">‚ôà B√©lier</h1>
      <QuestionProps title={questions[questionIndex].question} />
      <Line />

      <ButtonChoix
        choices={questions[questionIndex].choices}
        onChoice={handleNextQuestion}
      />

      <button
        className="question-retour-button"
        type="button"
        onClick={handlePreviousQuestion}
      >
        ‚Üê Revenir √† la question pr√©c√©dente
      </button>

      <button className="back-button" type="button" onClick={onReturn}>
        ‚Üê Retour
      </button>
    </div>
  );
}
