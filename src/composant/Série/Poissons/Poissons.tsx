import { useState } from "react";
import QuestionProps from "../../questionProps/QuestionProps";
import Line from "../../line/Line";
import ButtonChoix from "../../buttonChoix/buttonChoix";
import "./Poissons.css";

interface PoissonsProps {
  onReturn: () => void;
}

export default function Poissons({ onReturn }: PoissonsProps) {
  const [questionIndex, setQuestionIndex] = useState(0);

  // Liste des questions sp√©cifiques aux Poissons
  const questions = [
    {
      question: "√ätes-vous une personne r√™veuse et imaginative ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous √™tes tr√®s sensible et ressentez profond√©ment les √©motions ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous aimez aider les autres sans attendre quelque chose en retour ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous vous sentez souvent connect√©(e) √† votre intuition ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous pr√©f√©rez suivre votre c≈ìur plut√¥t que votre t√™te ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous aimez la musique, l'art ou toute autre forme de cr√©ativit√© ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous avez parfois du mal √† poser des limites avec les autres ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous aimez vous √©vader dans des mondes imaginaires ou r√™ver ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous √™tes souvent per√ßu(e) comme une personne myst√©rieuse et insaisissable ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous pr√©f√©rez suivre le courant plut√¥t que de forcer les choses ?",
      choices: ["Oui", "Non"],
    },
  ];

  // Gestion du passage √† la question suivante
  const handleNextQuestion = (selectedChoice: string) => {
    console.log("Choix s√©lectionn√© :", selectedChoice);
    if (questionIndex < questions.length - 1) {
      setQuestionIndex(questionIndex + 1);
    } else {
      alert("Fin du quiz Poissons ! üéâ");
    }
  };

  // Gestion du retour √† la question pr√©c√©dente
  const handlePreviousQuestion = () => {
    if (questionIndex > 0) {
      setQuestionIndex(questionIndex - 1);
    } else {
      alert("Vous √™tes d√©j√† √† la premi√®re question.");
    }
  };

  return (
    <div className="poissons-container">
      <h1 className="title">‚ôì Poissons</h1>
      <QuestionProps title={questions[questionIndex].question} />
      <Line />

      <ButtonChoix
        choices={questions[questionIndex].choices}
        onChoice={handleNextQuestion}
      />

      <button
        className="question-retour-button"
        type="button"
        onClick={handlePreviousQuestion}
      >
        ‚Üê Revenir √† la question pr√©c√©dente
      </button>

      <button className="back-button" type="button" onClick={onReturn}>
        ‚Üê Retour
      </button>
    </div>
  );
}
