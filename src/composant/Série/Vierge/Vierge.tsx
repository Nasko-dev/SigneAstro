import { useState } from "react";
import "./Vierge.css";
import QuestionProps from "../../questionProps/QuestionProps";
import Line from "../../line/Line";
import ButtonChoix from "../../buttonChoix/buttonChoix";

interface ViergeProps {
  onReturn: () => void;
}

export default function Vierge({ onReturn }: ViergeProps) {
  const [questionIndex, setQuestionIndex] = useState(0);

  // Liste des questions sp√©cifiques √† la Vierge
  const questions = [
    {
      question: "Aimez-vous que tout soit bien organis√© et structur√© ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous √™tes du genre perfectionniste dans ce que vous faites ?",
      choices: ["Oui", "Non"],
    },
    {
      question:
        "Vous remarquez facilement les petits d√©tails que les autres ignorent ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "√ätes-vous plus logique que spontan√©(e) ?",
      choices: ["Logique", "Spontan√©(e)"],
    },
    {
      question: "Aimez-vous aider les autres et leur donner des conseils ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous aimez planifier √† l'avance et √©viter les impr√©vus ?",
      choices: ["Oui", "Non"],
    },
    {
      question:
        "Avez-vous tendance √† √™tre critique envers vous-m√™me et les autres ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Pr√©f√©rez-vous travailler seul(e) ou en √©quipe ?",
      choices: ["Seul(e)", "En √©quipe"],
    },
    {
      question:
        "Aimez-vous analyser les situations avant de prendre une d√©cision ?",
      choices: ["Oui", "Non"],
    },
    {
      question: "Vous √™tes du genre √† suivre un plan ou √† improviser ?",
      choices: ["Suivre un plan", "Improviser"],
    },
  ];

  // Gestion du passage √† la question suivante
  const handleNextQuestion = (selectedChoice: string) => {
    console.log("Choix s√©lectionn√© :", selectedChoice);
    if (questionIndex < questions.length - 1) {
      setQuestionIndex(questionIndex + 1);
    } else {
      alert("Fin du quiz Vierge ! üéâ");
    }
  };

  // Gestion du retour √† la question pr√©c√©dente
  const handlePreviousQuestion = () => {
    if (questionIndex > 0) {
      setQuestionIndex(questionIndex - 1);
    } else {
      alert("Vous √™tes d√©j√† √† la premi√®re question.");
    }
  };

  return (
    <div className="vierge-container">
      <h1 className="title">‚ôç Vierge</h1>
      <QuestionProps title={questions[questionIndex].question} />
      <Line />

      <ButtonChoix
        choices={questions[questionIndex].choices}
        onChoice={handleNextQuestion}
      />

      <button
        className="question-retour-button"
        type="button"
        onClick={handlePreviousQuestion}
      >
        ‚Üê Revenir √† la question pr√©c√©dente
      </button>

      <button className="back-button" type="button" onClick={onReturn}>
        ‚Üê Retour
      </button>
    </div>
  );
}
